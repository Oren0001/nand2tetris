function Screen.init 0
push constant 16384
pop static 0
push constant 0
not
pop static 1
call Math.getPowersOfTwo 0
pop static 2
push constant 0
return
function Screen.clearScreen 2
push constant 0
pop local 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 8192
lt
not
if-goto WHILE_END0
push static 0
push local 0
add
push local 1
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.setColor 0
push argument 0
pop static 1
push constant 0
return
function Screen.drawPixel 4
push static 0
push constant 32
push argument 1
call Math.multiply 2
add
push argument 0
push constant 16
call Math.divide 2
add
pop local 0
push argument 0
push argument 0
push constant 16
call Math.divide 2
push constant 16
call Math.multiply 2
sub
pop local 1
push local 1
push static 2
add
pop pointer 1
push that 0
pop local 2
push static 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
call Memory.peek 1
push local 2
or
pop local 3
goto IF_END0
label IF_FALSE0
push local 0
call Memory.peek 1
push local 2
not
and
pop local 3
label IF_END0
push local 0
push local 3
call Memory.poke 2
pop temp 0
push constant 0
return
function Screen.drawHorizontalLine 0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 3
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push argument 2
push argument 3
eq
not
not
if-goto WHILE_END0
push argument 2
push constant 1
add
pop argument 2
push argument 0
push argument 2
add
push argument 1
call Screen.drawPixel 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
label WHILE_EXP1
push argument 2
push argument 3
eq
not
not
if-goto WHILE_END1
push argument 2
push constant 1
sub
pop argument 2
push argument 0
push argument 2
add
push argument 1
call Screen.drawPixel 2
pop temp 0
goto WHILE_EXP1
label WHILE_END1
label IF_END0
push constant 0
return
function Screen.drawVerticalLine 0
push argument 0
push argument 1
call Screen.drawPixel 2
pop temp 0
push argument 3
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
label WHILE_EXP0
push argument 2
push argument 3
eq
not
not
if-goto WHILE_END0
push argument 2
push constant 1
add
pop argument 2
push argument 0
push argument 1
push argument 2
add
call Screen.drawPixel 2
pop temp 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
label WHILE_EXP1
push argument 2
push argument 3
eq
not
not
if-goto WHILE_END1
push argument 2
push constant 1
sub
pop argument 2
push argument 0
push argument 1
push argument 2
add
call Screen.drawPixel 2
pop temp 0
goto WHILE_EXP1
label WHILE_END1
label IF_END0
push constant 0
return
function Screen.drawLineNorthWest 1
push constant 0
pop local 0
label WHILE_EXP0
push argument 2
push argument 4
lt
not
push argument 3
push argument 5
gt
not
and
not
if-goto WHILE_END0
push argument 0
push argument 2
add
push argument 1
push argument 3
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push constant 1
sub
pop argument 2
push local 0
push argument 5
add
pop local 0
goto IF_END0
label IF_FALSE0
push argument 3
push constant 1
add
pop argument 3
push local 0
push argument 4
add
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawLineNorthEast 1
push constant 0
pop local 0
label WHILE_EXP0
push argument 2
push argument 4
gt
not
push argument 3
push argument 5
gt
not
and
not
if-goto WHILE_END0
push argument 0
push argument 2
add
push argument 1
push argument 3
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 2
push constant 1
add
pop argument 2
push local 0
push argument 5
add
pop local 0
goto IF_END0
label IF_FALSE0
push argument 3
push constant 1
add
pop argument 3
push local 0
push argument 4
sub
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawLine 6
push constant 0
pop local 0
push constant 0
pop local 1
push argument 0
push argument 2
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push argument 1
push local 1
push argument 3
push argument 1
sub
call Screen.drawVerticalLine 4
pop temp 0
push constant 0
return
label IF_FALSE0
push argument 1
push argument 3
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push argument 1
push local 0
push argument 2
push argument 0
sub
call Screen.drawHorizontalLine 4
pop temp 0
push constant 0
return
label IF_FALSE1
push argument 0
push argument 2
gt
push argument 1
push argument 3
gt
and
push argument 1
push argument 3
gt
push argument 0
push argument 2
lt
and
or
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
pop local 5
push argument 2
pop argument 0
push local 5
pop argument 2
push argument 1
pop local 5
push argument 3
pop argument 1
push local 5
pop argument 3
label IF_FALSE2
push argument 2
push argument 0
sub
pop local 2
push argument 3
push argument 1
sub
pop local 3
push argument 0
push argument 1
push local 0
push local 1
push local 2
push local 3
call Screen.drawLineNorthEast 6
pop temp 0
push argument 0
push argument 1
push local 0
push local 1
push local 2
push local 3
call Screen.drawLineNorthWest 6
pop temp 0
push constant 0
return
function Screen.drawRectangle 1
push argument 2
pop local 0
push argument 0
push argument 1
push argument 0
push argument 3
call Screen.drawLine 4
pop temp 0
label WHILE_EXP0
push argument 0
push local 0
eq
not
not
if-goto WHILE_END0
push argument 0
push constant 1
add
pop argument 0
push argument 0
push argument 1
push argument 0
push argument 3
call Screen.drawLine 4
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Screen.drawCircle 3
push argument 2
push argument 2
call Math.multiply 2
pop local 2
push argument 2
neg
pop local 1
label WHILE_EXP0
push local 1
push argument 2
gt
not
not
if-goto WHILE_END0
push local 2
push local 1
push local 1
call Math.multiply 2
sub
call Math.sqrt 1
pop local 0
push argument 0
push local 0
sub
push argument 1
push local 1
add
push argument 0
push local 0
add
push argument 1
push local 1
add
call Screen.drawLine 4
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
